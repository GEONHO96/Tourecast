/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;
import java.util.List;

/**
 *
 * @author sence
 */
public class recommendAttraction extends Main {
    public int[] getRandom5Num () {
        Random random = new Random();

        // 중복을 피하기 위한 Set 활용
        Set<Integer> uniqueNumbers = new HashSet<>();

        // 중복되지 않는 5개의 난수 생성
        while (uniqueNumbers.size() < 5) {
            int randomNumber = random.nextInt(438) + 1;
            uniqueNumbers.add(randomNumber);
        }

        return uniqueNumbers.stream().mapToInt(Integer::intValue).toArray();
    }
    public void setRamdomspot(){
        int[] ram_num = getRandom5Num();

        model.setColumnCount(0);
        model.setRowCount(0);
        model.addColumn("관광지명");
        model.addColumn("코스순서");
        model.addColumn("여행시간");
        model.addColumn("실내외");
        model.addColumn("테마명");

        for(int i = 0; i < 5; i++){
            recommandspotStrings = (ArrayList<String>)randomspot.randomspot(ram_num[i]);
            model.addRow(new Object[]{"추천 관광코스#" + (i+1)});
            for (String spots : recommandspotStrings) {
                String[] spot = spots.split("#");
                model.addRow(new Object[]{spot[0], spot[1], spot[2], spot[3], spot[4]});
            }
        }

        SwingUtilities.invokeLater(()->{
            jTable.setModel(model);
            jScrollPane1.setViewportView(jTable);
            revalidate();
            repaint();
        });
    }
    private Randomspot randomspot = new Randomspot();

    /**
     * Creates new form recommendAttraction
     */
    public recommendAttraction() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    public void initComponents() {
        System.out.println("recommentAttraction -> initComponents");

        지역별관광지버튼 = new JButton();
        관광치추천버튼 = new JButton();
        지역별날씨정보버튼 = new JButton();
        jTable = new JTable();
        jLabel1 = new JLabel();
        jScrollPane1 = new JScrollPane();
        jTextArea1 = new JTextArea();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        지역별관광지버튼.setBackground(new Color(158, 141, 186));
        지역별관광지버튼.setFont(new Font("맑은 고딕", 0, 36)); // NOI18N
        지역별관광지버튼.setForeground(new Color(255, 255, 255));
        지역별관광지버튼.setText("지역별 관광지");

        관광치추천버튼.setBackground(new Color(158, 141, 186));
        관광치추천버튼.setFont(new Font("맑은 고딕", 0, 36)); // NOI18N
        관광치추천버튼.setForeground(new Color(255, 255, 255));
        관광치추천버튼.setText("관광지추천");

        지역별날씨정보버튼.setBackground(new Color(158, 141, 186));
        지역별날씨정보버튼.setFont(new Font("맑은 고딕", 0, 36)); // NOI18N
        지역별날씨정보버튼.setForeground(new Color(255, 255, 255));
        지역별날씨정보버튼.setText("지역별 날씨정보");

        jLabel1.setIcon(new ImageIcon(getClass().getResource("/images/관광지추천.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(421, 421, 421)
                                .addComponent(지역별관광지버튼, GroupLayout.PREFERRED_SIZE, 330, GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(지역별날씨정보버튼, GroupLayout.PREFERRED_SIZE, 330, GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(관광치추천버튼, GroupLayout.PREFERRED_SIZE, 327, GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(400, 400, 400)
                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 930, GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(지역별관광지버튼, GroupLayout.PREFERRED_SIZE, 137, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(지역별날씨정보버튼, GroupLayout.PREFERRED_SIZE, 137, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(관광치추천버튼, GroupLayout.PREFERRED_SIZE, 137, GroupLayout.PREFERRED_SIZE))
                                .addGap(173, 173, 173)
                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 490, GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1)
        );

        ActionListener localweatherPanel = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);

                lw.setVisible(true);
                System.out.println("관광지추천에서지역별날씨");
            }
        };
        지역별날씨정보버튼.addActionListener(localweatherPanel);

        ActionListener localattractionPanel = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);

                la.setVisible(true);
                System.out.println("관광지추천에서지역별관광지");
            }
        };
        지역별관광지버튼.addActionListener(localattractionPanel);

        ActionListener recommendattractionPanel = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);

                ra.setRamdomspot();
                ra.setVisible(true);
                System.out.println("지역날씨에서관광지추천");
            }
        };
        관광치추천버튼.addActionListener(recommendattractionPanel);

        pack();
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify
    private DefaultTableModel model=new DefaultTableModel();
    private JLabel jLabel1;
    private JScrollPane jScrollPane1;
    private JTextArea jTextArea1;
    private JButton 관광치추천버튼;
    private JButton 지역별관광지버튼;
    private JButton 지역별날씨정보버튼;
    private JTable jTable;
    private List<String> recommandspotStrings;
    // End of variables declaration
}
